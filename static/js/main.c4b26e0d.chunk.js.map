{"version":3,"sources":["components/DigitalClock/DigitalClock.jsx","components/Stopwatch/Stopwatch.jsx","components/Countdown/Countdown.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["DigitalClock","useState","clockState","setClockState","useEffect","setInterval","date","Date","toLocaleTimeString","className","Stopwatch","time","setTime","timerOn","setTimerOn","interval","prevTime","clearInterval","Math","floor","slice","id","onClick","Countdown","countDownDate","getTime","x","now","distance","days","hours","minutes","seconds","App","to","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4b26e0d.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./DigitalClock.scss\"\n\nconst DigitalClock = () => {\n  const [clockState, setClockState] = useState();\n\n  useEffect(() => {\n    setInterval(() => {\n      const date = new Date();\n      setClockState(date.toLocaleTimeString());\n    }, 1000);\n  }, []);\n  return (\n    <div className=\"digital-clock\">\n      <h2>{clockState}</h2>\n    </div>\n  );\n};\n\nexport default DigitalClock;\n","import './Stopwatch.scss'\nimport React, { useState, useEffect } from \"react\";\n\nconst Stopwatch = () => {\n    const [time, setTime] = useState(0);\n    const [timerOn, setTimerOn] = useState(false);\n  \n    useEffect(() => {\n      let interval = null;\n  \n      if (timerOn) {\n        interval = setInterval(() => {\n          setTime((prevTime) => prevTime + 10);\n        }, 10);\n      } else {\n        clearInterval(interval);\n      }\n  \n      return () => clearInterval(interval);\n    }, [timerOn]);\n    return (\n      <div className=\"stopwatch\">\n        <h2>\n        <span>{(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:</span>\n        <span>{(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}:</span>\n        <span>{(\"0\" + ((time / 10) % 100)).slice(-2)}</span>\n        </h2>\n        <div id=\"buttons\">\n        {!timerOn && time === 0 && (\n          <button className=\"buttons\" onClick={() => setTimerOn(true)}>Start</button>\n        )}\n        {timerOn && <button className=\"buttons\"onClick={() => setTimerOn(false)}>Stop</button>}\n        {!timerOn && time > 0 && (\n          <button className=\"buttons\" onClick={() => setTime(0)}>Reset</button>\n        )}\n        {!timerOn && time > 0 && (\n          <button className=\"buttons\" onClick={() => setTimerOn(true)}>Resume</button>\n        )}\n      </div>\n      </div>\n    );\n  };\n\n  export default Stopwatch;","import React, { useState, useEffect } from 'react';\nimport \"./Countdown.scss\"\n\nconst Countdown = () => {\n    const [time, setTime] = useState(\"\");\n    useEffect(() => {\n      let countDownDate = new Date(\"2021/12/3\").getTime();\n      let x = setInterval(() => {\n        let now = new Date().getTime();\n  \n        let distance = countDownDate - now;\n  \n        let days = Math.floor(distance / (1000 * 60 * 60 * 24));\n        let hours = Math.floor(\n          (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n        );\n        let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n        let seconds = Math.floor((distance % (1000 * 60)) / 1000);\n  \n        setTime(days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \");\n  \n        if (distance < 0) {\n          clearInterval(x);\n          setTime(\"COUNTDOWN FINISHED\");\n        }\n      }, 1000);\n    }, []);\n    return (\n      <div className=\"countdown\">\n        <h2>{time}</h2>\n      </div>\n    );\n  };\n  \n  export default Countdown;\n","import './App.scss';\nimport { Link, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport React from 'react';\nimport DigitalClock from './components/DigitalClock/DigitalClock';\nimport Stopwatch from './components/Stopwatch/Stopwatch';\nimport Countdown from './components/Countdown/Countdown'\n\nconst App = () => {\n  return (    \n    <>\n    <Router>\n    <div className= \"title\"> WATCHES APP </div>\n      <header className=\"navbar\">\n      <Link to=\"/\">\n        <button className=\"navbar-button\">DigitalClock</button>\n        </Link>\n        <Link to=\"/Stopwatch\">\n          <button className=\"navbar-button\">Stopwatch</button>\n      </Link>\n      <Link to=\"/Countdown\">\n          <button className=\"navbar-button\">Countdown</button>\n          <div className= \"photo\">\n          </div>\n      </Link>\n      </header>\n<div className= \"hour\">\n      <main>\n          <Route exact path=\"/\" component={DigitalClock} />\n          <Route path=\"/Stopwatch\" component={Stopwatch} />\n          <Route path=\"/Countdown\" component={Countdown} />\n      </main>\n      </div>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}